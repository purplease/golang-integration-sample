basePath: /v1
definitions:
  diner.MessageResponse:
    properties:
      message:
        type: string
    type: object
  diner.NewDinerRequest:
    properties:
      name:
        example: Mr. Smith
        type: string
      table_no:
        example: 101
        type: integer
    required:
    - name
    - table_no
    type: object
  diner.PaginationResultDiner:
    properties:
      current:
        type: integer
      data:
        items:
          $ref: '#/definitions/github_com_purplease_golang-integration-sample_pkg_domain_diner.Diner'
        type: array
      limit:
        type: integer
      nextCursor:
        type: integer
      numPages:
        type: integer
      prevCursor:
        type: integer
      total:
        type: integer
    type: object
  github_com_purplease_golang-integration-sample_pkg_domain_diner.Diner:
    properties:
      created_at:
        type: string
      id:
        example: 123
        type: integer
      name:
        example: Mr. Smith
        type: string
      table_no:
        example: 101
        type: integer
      updated_at:
        example: "2021-02-24 20:19:39"
        type: string
    type: object
  github_com_purplease_golang-integration-sample_pkg_domain_menu.Menu:
    properties:
      created_at:
        type: string
      description:
        example: Some Description
        type: string
      id:
        example: 123
        type: integer
      name:
        example: Hyderabadi Dum Briyani
        type: string
      price:
        example: 200.5
        type: number
      updated_at:
        example: "2021-02-24 20:19:39"
        type: string
    type: object
  github_com_purplease_golang-integration-sample_pkg_domain_order.Request:
    properties:
      created_at:
        type: string
      diner_id:
        example: 1
        type: integer
      id:
        example: 123
        type: integer
      menu_id:
        example: 3
        type: integer
      quantity:
        example: 2
        type: integer
    type: object
  github_com_purplease_golang-integration-sample_pkg_domain_order.Response:
    properties:
      created_at:
        type: string
      diner_name:
        example: Mr. Smith
        type: string
      id:
        example: 123
        type: integer
      menu_description:
        example: Hyderabadi Chicken Dum Briyani
        type: string
      menu_name:
        example: HCDB
        type: string
      quantity:
        example: 2
        type: integer
      updated_at:
        example: "2021-02-24 20:19:39"
        type: string
    type: object
  menu.MessageResponse:
    properties:
      message:
        type: string
    type: object
  menu.NewMenuRequest:
    properties:
      description:
        example: Something
        type: string
      name:
        example: Paracetamol
        type: string
      price:
        example: 200.5
        type: number
    required:
    - description
    - name
    - price
    type: object
  menu.PaginationResultMenu:
    properties:
      current:
        type: integer
      data:
        items:
          $ref: '#/definitions/github_com_purplease_golang-integration-sample_pkg_domain_menu.Menu'
        type: array
      limit:
        type: integer
      nextCursor:
        type: integer
      numPages:
        type: integer
      prevCursor:
        type: integer
      total:
        type: integer
    type: object
  message.MessageResponse:
    properties:
      message:
        type: string
    type: object
  message.NewMessageRequest:
    properties:
      body:
        example: Something
        type: string
      phone_number:
        example: "+919901170563"
        type: string
    required:
    - body
    - phone_number
    type: object
  message.Response:
    properties:
      body:
        example: Sent Successfully
        type: string
      created_at:
        type: string
      status:
        example: ok
        type: string
    type: object
  order.MessageResponse:
    properties:
      message:
        type: string
    type: object
  order.NewOrderRequest:
    properties:
      diner_id:
        example: 1
        type: integer
      menu_id:
        example: 3
        type: integer
      quantity:
        example: 2
        type: integer
    required:
    - diner_id
    - menu_id
    - quantity
    type: object
  verify.NewCreateOTPRequest:
    properties:
      channel:
        example: sms, whatsapp, call, email
        type: string
      to:
        example: +919901170563, rajesh.biswas@purplease.com
        type: string
    required:
    - channel
    - to
    type: object
  verify.NewValidateOTPRequest:
    properties:
      code:
        example: "123456"
        type: string
      to:
        example: +919901170563, rajesh.biswas@purplease.com
        type: string
    required:
    - code
    - to
    type: object
  verify.Response:
    properties:
      body:
        example: Sent Successfully
        type: string
      created_at:
        type: string
      status:
        example: ok
        type: string
    type: object
  verify.VerifyResponse:
    properties:
      verify:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: rajesh.biswas@purplease.com
    name: Rajesh Kumar Biswas
    url: https://github.com/purplease-rajesh
  description: Documentation's Golang Integration Sample
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Golang Integration Sample
  version: "2.0"
paths:
  /diners:
    get:
      description: Get all Diners on the system
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/diner.PaginationResultDiner'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diner.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diner.MessageResponse'
      summary: Get all Diners
      tags:
      - diners
    post:
      consumes:
      - application/json
      description: Create new diner on the system
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/diner.NewDinerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_purplease_golang-integration-sample_pkg_domain_diner.Diner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diner.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diner.MessageResponse'
      summary: Create New Diner
      tags:
      - diners
  /diners/{diner_id}:
    delete:
      description: Delete Diners by ID on the system
      parameters:
      - description: id of diner
        in: path
        name: diner_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diner.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diner.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diner.MessageResponse'
      summary: Delete diners by ID
      tags:
      - diners
    get:
      description: Get Diners by ID on the system
      parameters:
      - description: id of diner
        in: path
        name: diner_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_purplease_golang-integration-sample_pkg_domain_diner.Diner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diner.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diner.MessageResponse'
      summary: Get diners by ID
      tags:
      - diners
  /menus:
    get:
      description: Get all Menus on the system
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      - description: page
        in: query
        name: page
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/menu.PaginationResultMenu'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/menu.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/menu.MessageResponse'
      summary: Get all Menus
      tags:
      - menus
    post:
      consumes:
      - application/json
      description: Create new menu on the system
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/menu.NewMenuRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_purplease_golang-integration-sample_pkg_domain_menu.Menu'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/menu.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/menu.MessageResponse'
      summary: Create New Menu
      tags:
      - menus
  /menus/{menu_id}:
    delete:
      description: Delete Menus by ID on the system
      parameters:
      - description: id of menu
        in: path
        name: menu_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/menu.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/menu.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/menu.MessageResponse'
      summary: Delete menus by ID
      tags:
      - menus
    get:
      description: Get Menus by ID on the system
      parameters:
      - description: id of menu
        in: path
        name: menu_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_purplease_golang-integration-sample_pkg_domain_menu.Menu'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/menu.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/menu.MessageResponse'
      summary: Get menus by ID
      tags:
      - menus
  /menus/top:
    get:
      description: Get Top Menus by count on the system
      parameters:
      - description: top count
        in: query
        name: count
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_purplease_golang-integration-sample_pkg_domain_menu.Menu'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/menu.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/menu.MessageResponse'
      summary: Get top menus by count
      tags:
      - menus
  /messages/sms:
    post:
      consumes:
      - application/json
      description: Create new SMS message on the external system like TWILIO
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message.NewMessageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/message.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/message.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/message.MessageResponse'
      summary: Create New SMS Message
      tags:
      - messages
  /messages/whatsapp:
    post:
      consumes:
      - application/json
      description: Create new Whatsapp message on the external system like TWILIO
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message.NewMessageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/message.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/message.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/message.MessageResponse'
      summary: Create New Whatsapp Message
      tags:
      - messages
  /orders:
    post:
      consumes:
      - application/json
      description: Create new order on the system
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/order.NewOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_purplease_golang-integration-sample_pkg_domain_order.Request'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/order.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/order.MessageResponse'
      summary: Create New order
      tags:
      - orders
  /orders/{diner_id}:
    get:
      description: Get orders by Diner ID on the system
      parameters:
      - description: id of diner
        in: path
        name: diner_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_purplease_golang-integration-sample_pkg_domain_order.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/order.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/order.MessageResponse'
      summary: Get orders by Diner ID
      tags:
      - orders
  /orders/{order_id}:
    delete:
      description: Delete orders by ID on the system
      parameters:
      - description: id of order
        in: path
        name: order_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/order.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/order.MessageResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/order.MessageResponse'
      summary: Delete orders by ID
      tags:
      - orders
  /otp/create:
    post:
      consumes:
      - application/json
      description: Create new SMS/whatsapp verify OTP from external system like Twilio
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/verify.NewCreateOTPRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/verify.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/verify.VerifyResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/verify.VerifyResponse'
      summary: Create New SMS/whatsapp Verify OTP
      tags:
      - verifys
  /otp/validate:
    post:
      consumes:
      - application/json
      description: Validate a SMS/whatsapp OTP from external system like Twilio
      parameters:
      - description: body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/verify.NewValidateOTPRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/verify.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/verify.VerifyResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/verify.VerifyResponse'
      summary: Validates a SMS/whatsapp OTP
      tags:
      - verifys
swagger: "2.0"
